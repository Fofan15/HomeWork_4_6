// <auto-generated />
using System;
using CodeHomeWork_4_6;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeHomeWork_4_6.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230427161622_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfDeath = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "example1@gmail.com",
                            InstagramUrl = "instagram1.com",
                            Name = "David",
                            Phone = "11111111"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "example2@gmail.com",
                            InstagramUrl = "instagram2.com",
                            Name = "Sveta",
                            Phone = "22222222"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfDeath = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "example3@gmail.com",
                            InstagramUrl = "instagram3.com",
                            Name = "Roma",
                            Phone = "33333333"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(2000, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "example4@gmail.com",
                            InstagramUrl = "instagram4.com",
                            Name = "Tanya",
                            Phone = "44444444"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(2000, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfDeath = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "example5@gmail.com",
                            InstagramUrl = "instagram5.com",
                            Name = "Vanya",
                            Phone = "55555555"
                        });
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GenreId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Example 1.1"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Example 2.1"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Example 3.1"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Example 4.1"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Example 5.1"
                        });
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SongId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Song", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = "1:11",
                            GenreId = 1,
                            ReleasedDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Example 1"
                        },
                        new
                        {
                            Id = 2,
                            Duration = "2:22",
                            GenreId = 2,
                            ReleasedDate = new DateTime(2010, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Example 2"
                        },
                        new
                        {
                            Id = 3,
                            Duration = "3:33",
                            GenreId = 3,
                            ReleasedDate = new DateTime(2010, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Example 3"
                        },
                        new
                        {
                            Id = 4,
                            Duration = "4:44",
                            GenreId = 4,
                            ReleasedDate = new DateTime(2010, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Example 4"
                        },
                        new
                        {
                            Id = 5,
                            Duration = "5:55",
                            GenreId = 5,
                            ReleasedDate = new DateTime(2010, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Example 5"
                        });
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.SongToArtist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("SongToArtist");
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.Song", b =>
                {
                    b.HasOne("CodeHomeWork_4_6.DB_Models.Genre", "Genre")
                        .WithMany("Song")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.SongToArtist", b =>
                {
                    b.HasOne("CodeHomeWork_4_6.DB_Models.Artist", "Artist")
                        .WithMany("SongToArtist")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeHomeWork_4_6.DB_Models.Song", "Song")
                        .WithMany("SongToArtist")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.Artist", b =>
                {
                    b.Navigation("SongToArtist");
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.Genre", b =>
                {
                    b.Navigation("Song");
                });

            modelBuilder.Entity("CodeHomeWork_4_6.DB_Models.Song", b =>
                {
                    b.Navigation("SongToArtist");
                });
#pragma warning restore 612, 618
        }
    }
}
